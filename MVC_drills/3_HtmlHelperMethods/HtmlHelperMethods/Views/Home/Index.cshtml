@model HtmlHelperMethods.Models.Book
@{
    ViewBag.Title = "Index";

    List<SelectListItem> categories = (List<SelectListItem>)ViewBag.Categories;
    // this comes from HomeController
}

<h2>Index</h2>

<!-- the strudel-using allows for temporary memory allocation -->
<!-- BeginForm is similar to an opening form tag -->
<!-- 
   Postback to the action called "index"
    Home controller
    Use the form method Post 
     -->
@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{
    <!-- this is hard-coding a text box -->
    <!-- created for specific attributes of View model called "title" -->
    <!-- form-control is a bootstrap callout ... as is "form-group" in the div -->
    <div class="form-group">
        @Html.LabelFor(p => p.Title)
        @Html.TextBoxFor(p => p.Title, new { @class = "form-control" })
    </div>


    <!-- This is a slightly dressed up version of the copies sold box -->
    <!-- Again, the form-group in div is for Bootstrap -->
    <div class="form-group">
        @Html.LabelFor(p => p.CopiesSold)
        @Html.EditorFor(p => p.CopiesSold, new { @class = "form-control" })
    </div>


    <!-- This is a drop-down list of year published -->
    <div class="form-group">
        @Html.LabelFor(p => p.YearPublished)
        <!-- inline List creation -->
        @Html.DropDownListFor(p => p.YearPublished, new SelectList(
            new List<Object>
            {
                new {text = 2010 },
                new {text = 2011 },
                new {text = 2012 },
                new {text = 2013 },
                new {text = 2014 },
                new {text = 2015 },
                new {text = 2016 }
            },
            // this sets the default:
            "text", "text", 2015), new { @class = "form-control" })

    </div>

    <!-- See HomeController for the original categories -->
    <div class="form-group">
        @Html.LabelFor(p => p.Category)
        <!-- categories was brought in at the top of the page as a List<> -->

        <!-- genres set and assigned in Models > Book.cs -->
        @Html.ListBoxFor(p => p.Category, categories, new { @class = "form-control" })
    </div>

    <!-- Drop-down enum -->
    <div class="form-group">
        @Html.LabelFor(p => p.Genre)
        @Html.EnumDropDownListFor(p => p.Genre, "Choose one...", new { @class = "form-control" })
    </div>

    <!-- simple UNSTYLED checkbox -->
    <div class="checkbox">
        <br/>
        @Html.LabelFor(p => p.InStock)
        @Html.CheckBoxFor(p => p.InStock)
    </div>


    <!-- radio buttons -->
    @Html.RadioButtonFor(p => p.Availability, HtmlHelperMethods.Models.Availability.Pickup, new { id = @HtmlHelperMethods.Models.Availability.Pickup, @checked = true, @GroupName = "MyGroup" })
    <label for="@HtmlHelperMethods.Models.Availability.Pickup">@HtmlHelperMethods.Models.Availability.Pickup</label>

    @Html.RadioButtonFor(p => p.Availability, HtmlHelperMethods.Models.Availability.Delivery, new { id = @HtmlHelperMethods.Models.Availability.Delivery, @GroupName = "MyGroup" })
    <label for="@HtmlHelperMethods.Models.Availability.Delivery">@HtmlHelperMethods.Models.Availability.Delivery</label>

    @Html.RadioButtonFor(p => p.Availability, HtmlHelperMethods.Models.Availability.Reseller, new { id = @HtmlHelperMethods.Models.Availability.Reseller, @GroupName = "MyGroup" })
    <label for="@HtmlHelperMethods.Models.Availability.Reseller">@HtmlHelperMethods.Models.Availability.Reseller</label>



    <!-- Formatted text box ... calls out 5 rows with 30 chars per row -->
    <div class="form-group">
        <br/>
        @Html.LabelFor(p => p.Description)
        @Html.TextAreaFor(p => p.Description, 5, 30, new { @class = "form-control" })
    </div>

    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-default" />
    </div>

}

